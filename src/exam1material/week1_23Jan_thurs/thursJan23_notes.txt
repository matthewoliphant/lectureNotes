HW 0 - due today

HW 1 - due Tuesday, January 28


Collaboration policy


AI policy



////////////////////////////////////////////////////////

- where to find examples from class

- how to clone lecture notes repo

- weekly review quizzes

- what to do before/after each class

/////////////////////////////////////////////////////////

Today:

- More with logical reasoning and puzzles
- Begin logic gates and truth tables
- Evaluating logical statements


/////////////////////////////////////////////////////////

All ints.

if (x < 3 || y > 4) {
    statements1;
}
else if (x < 5 && y == 7) {
    statements2;
}
else {
    statements3;
}

--> is it possible for "statements2" to execute?


--> what if "y==7" becomes "y > 2"?



////////////////////////////////////////////////////////

More with knights and knaves.

knights: each full statement that they make is true
knave: each full statement that they make is false

You see two different inhabitants, Ava and Bob.

Ava says that Bob is a knave.
Bob says, "Neither Ava nor I are knaves."

    "Ava is a knight and I am a knight"


What does "neither" mean?
Bob: Ava and I are both knights

Rewrite both statements.



What are Ava and Bob?

Suppose Ava is a knight.  Then Bob must be a knave.  This works since Bob's statment would then be a lie becuase he is not a knight

Suppose instead Ava is a knave.  Then from her statement Bob would be a knight. Bob's statment wouldnt be true becuase Ava is a knave and not a knight

Solution: Ava is a knight. Bob is a knave









////////////////////////////////////////////////////////


You meet three inhabitants: Sarah, Bill and Mae.

Sarah tells you that only a knave would say that Bill is a knave.
Bill claims that it's false that Mae is a knave.
Mae tells you, "Bill would tell you that I am a knave."

What types are Sarah, Bill, and Mae?


(How might we simplify everything?)

Sarah: Bill is a knight
Bill: Mae is a knight
Mae: 

Suppose that sarah is a knight.  Bill must be a knight from her statement.  Then from his statment Mae must be a knight.But Bill would not say Mae is a knave so it does not work

Suppose that Sarah is a knave.  THen from her statment Bill would be be a knave and from his statment Mae is a knave.

Solution is that all 3 are knaves

////////////////////////////////////

Lion always lies on Mondays, Tuesdays, and Wednesdays.
Lion always tells the truth on other days.
Unicorn always lies on Thursdays, Fridays, and Saturdays,
    and always tells the truth on other days.

On Sunday, everyone tells the truth.

Lion says: "Yesterday was one of my lying days."
Unicorn says: "Yesterday was one of my lying days, too."

What day is it?


Thursday 


////////////////////////////////

Tweedledee and Tweedledum are identical.
You know that one of them lies Mon/Tues/Wed,
and that the other lies Thurs/Fri/Sat.
(They tell the truth on non-lying days.)

(So they both tell the truth on Sunday.)

You don't know which is which.

You see both of them together.
The first one says: "I'm Tweedledum."
The second one says: "I'm Tweedledee."

Which is which? What day is it?

On every day but sunday becuase one of them is lying they should say the exact same name so it must be sunday and its in order of how they say it.




//////////////////////////////////

In-class quiz
If Carl is a knight then Diana must be a knight




//////////////////////////////////

You know that either Tweedledum or Tweedledee has
    lost a rattle.
You find it, and want to return it to the correct one.
You don't know what day it is, but are sure that it isn’t
    Sunday.


(we know one is lying, one is telling truth)

The first one says: "Tweedledee owns the rattle."
The second one says: "I'm Tweedledee!"

Who gets the rattle?

Suppose first twin is telling truth while the second twin is lying. This means tweedlee really owns the rattle and the second twin is not tweedleee but tweedleedumnb.  Which means the rattle belongs to the first twin.
Suppose the second twin is telling the truth while the first twin is lying.  This means tweedldee does not own the rattle and the second twin is tweedlee.  Thus the first twin tweedledumb owns the rattle. 

In both cases the first twin is the owner of the rattle

///////////////////////////////////////////

Based on Shakespeare's "Merchant of Venice".

There are three caskets – one gold, one silver,
    and one lead.
Exactly one of the caskets contains a portrait.
Each casket has a message on it, and you know that at most
    one of the messages is true.

Gold casket: "The portrait is in this casket."
Silver casket: "The portrait is not in this casket."
Lead casket: "The portrait is not in the gold casket."

Where is the portrait?






///////////////////////////////////

Cheryl's birthday problem.

Written for Singapore and Asian Schools Math Olympiad in 2015

Albert and Bernard want to know when Cheryl's birthday is.
Cheryl gives them 10 potential dates:

May 15, May 16, May 19
June 17, June 18
July 14, July 16
August 14, August 15, August 17

Cheryl privately tells Albert her birthday month.
    (May, June, July, or August)

Cheryl privately tells Bernard her birthday day (number).
    (14-19)


Albert says: "I don't know when Cheryl's birthday is,
    but I know Bernard doesn't know too."

Bernard says: "At first I didn't know when Cheryl's
    birthday is, but now I do."

    (Bernard also knows it is not May or June)

Albert says: "Then I also know when Cheryl's birthday is."



///////////////////////////////////

Start truth tables and logic gates.

    have boolean variables
    want to express statements like: p AND (q OR r)

Variables can be true or false

Basic operations:

∧   and
∨   or (inclusive or)
¬   not
→   implies


Basic logic gates (draw on board)


gates still used to design circuits


why do we care about equivalent circuits?


what about programming?


///////////////////////////////////////////////////

Fill in basic operations:


AND:

p q  #  p ∧ q
--------------
T T  #  T  
T F  #   F 
F T  #   F 
F F  #   F 


OR:

p q  #  p ∨ q
--------------
T T  #    T
T F  #   T 
F T  #  T  
F F  #   F 


NOT:

p  # ¬p
--------
T  # F
F  # T

////////////////////////////////////////////////

IMPLIES operator →

"If I have a test, then I will study"

p: I have a test
q: I will study

p → q

It is false if we have BROKEN A PROMISE.
Otherwise we have not.

p q  #  p → q
--------------
T T  #    T
T F  #    F
F T  #    T
F F  #    T

/////////////////////////////////////////

How does the implies operator relate to programming?

//////////////////////////////////////////

Design circuits for:

¬(p ∨ q)       (p NOR q)

¬(p ∧ (q ∨ r))

p XOR q (with just the gates we've seen, not a specific XOR gate)
XOR is the same as an or gate however it cannot be both must be an exclusive or

/////////////////////////////////////

How would we evaluate the output of these circuits with
different inputs?




Graphically build circuits:

https://logic.ly/demo/


//////////////////////////////////////

Evaluating logical statements.

Basic operations:

∧ - AND
∨ - OR (inclusive or)
¬ - NOT
→ - IMPLIES

////////////////////////////////////////

Consider ¬p ∨ q ∧ r.

--> what operation do we do first?



Order of operations

In math?




For logic statements:

From highest (happens first) to lowest (happens last) precedence:


////////////////////////////////////////////////

Given this statement:

    ¬p ∨ q ∧ r

Add () to show the order of operations.




Evaluate the above statement using these
variable assignments:

p is T
q is F
r is F



///////////////////////////////////////////

Next:
- more with order of operations
- bigger truth tables
- parse trees
- begin propositional logic